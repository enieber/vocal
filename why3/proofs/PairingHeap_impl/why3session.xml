<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="4">
<prover id="1" name="Z3" version="4.5.0" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.4.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="CVC4" version="1.5" timelimit="1" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.2.0" timelimit="5" steplimit="0" memlimit="1000"/>
<file name="../PairingHeap_impl.mlw" proved="true">
<theory name="Impl" proved="true">
 <goal name="Make.le_roots_trans" proved="true">
 <transf name="induction_ty_lex" proved="true" >
  <goal name="le_roots_trans.0" proved="true">
  <proof prover="4"><result status="valid" time="0.07" steps="219"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="Make.VC size_heap_nonneg" expl="VC for size_heap_nonneg" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="99"/></proof>
 </goal>
 <goal name="Make.VC size_heap_list_nonneg" expl="VC for size_heap_list_nonneg" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="118"/></proof>
 </goal>
 <goal name="Make.VC size_empty" expl="VC for size_empty" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="71"/></proof>
 </goal>
 <goal name="Make.VC occ_heap_nonneg" expl="VC for occ_heap_nonneg" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="110"/></proof>
 </goal>
 <goal name="Make.VC occ_heap_list_nonneg" expl="VC for occ_heap_list_nonneg" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="136"/></proof>
 </goal>
 <goal name="Make.VC mem_heap" expl="VC for mem_heap" proved="true">
 <proof prover="3"><result status="valid" time="0.11"/></proof>
 </goal>
 <goal name="Make.VC mem_heap_list" expl="VC for mem_heap_list" proved="true">
 <proof prover="4"><result status="valid" time="0.11" steps="545"/></proof>
 </goal>
 <goal name="Make.VC root_is_minimum_heap" expl="VC for root_is_minimum_heap" proved="true">
 <proof prover="3"><result status="valid" time="0.10"/></proof>
 </goal>
 <goal name="Make.VC heap" expl="VC for heap" proved="true">
 <proof prover="3"><result status="valid" time="0.04"/></proof>
 </goal>
 <goal name="Make.size_nonneg" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="68"/></proof>
 </goal>
 <goal name="Make.le_root_heap_trans" proved="true">
 <proof prover="4"><result status="valid" time="0.12" steps="204"/></proof>
 </goal>
 <goal name="Make.le_root_trans" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="76"/></proof>
 </goal>
 <goal name="Make.occ_nonneg" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="68"/></proof>
 </goal>
 <goal name="Make.mem_t" proved="true">
 <proof prover="4"><result status="valid" time="0.03" steps="125"/></proof>
 </goal>
 <goal name="Make.root_is_minimum" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="86"/></proof>
 </goal>
 <goal name="Make.VC empty" expl="VC for empty" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="191"/></proof>
 </goal>
 <goal name="Make.VC is_empty" expl="VC for is_empty" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="95"/></proof>
 </goal>
 <goal name="Make.VC find_min" expl="VC for find_min" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="97"/></proof>
 </goal>
 <goal name="Make.VC merge_heap" expl="VC for merge_heap" proved="true">
 <proof prover="4"><result status="valid" time="0.53" steps="2559"/></proof>
 </goal>
 <goal name="Make.VC merge" expl="VC for merge" proved="true">
 <proof prover="4"><result status="valid" time="0.05" steps="413"/></proof>
 </goal>
 <goal name="Make.VC insert" expl="VC for insert" proved="true">
 <proof prover="4"><result status="valid" time="0.28" steps="923"/></proof>
 </goal>
 <goal name="Make.VC merge_pairs_heap" expl="VC for merge_pairs_heap" proved="true">
 <proof prover="4"><result status="valid" time="0.43" steps="1047"/></proof>
 </goal>
 <goal name="Make.VC delete_min" expl="VC for delete_min" proved="true">
 <proof prover="4"><result status="valid" time="0.78" steps="2223"/></proof>
 </goal>
</theory>
<theory name="Correct" proved="true">
 <goal name="Sig.Make.X.is_pre_order" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="26"/></proof>
 </goal>
 <goal name="Sig.Make.X.VC compare" expl="VC for compare" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="26"/></proof>
 </goal>
 <goal name="Sig.Make.VC empty" expl="VC for empty" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="112"/></proof>
 </goal>
 <goal name="Sig.Make.VC is_empty" expl="VC for is_empty" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="110"/></proof>
 </goal>
 <goal name="Sig.Make.VC merge" expl="VC for merge" proved="true">
 <proof prover="4"><result status="valid" time="0.01" steps="218"/></proof>
 </goal>
 <goal name="Sig.Make.VC insert" expl="VC for insert" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="347"/></proof>
 </goal>
 <goal name="Sig.Make.min_def" proved="true">
 <proof prover="2"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="Sig.Make.VC find_min" expl="VC for find_min" proved="true">
 <proof prover="4"><result status="valid" time="0.02" steps="30"/></proof>
 </goal>
 <goal name="Sig.Make.VC delete_min" expl="VC for delete_min" proved="true">
 <proof prover="4"><result status="valid" time="0.20" steps="434"/></proof>
 </goal>
</theory>
<theory name="CompareInt" proved="true">
 <goal name="VC compare" expl="VC for compare" proved="true">
 <proof prover="3"><result status="valid" time="0.00"/></proof>
 </goal>
</theory>
<theory name="Client" proved="true">
 <goal name="Sig.Make.X.is_pre_order" proved="true">
 <proof prover="3"><result status="valid" time="0.51"/></proof>
 </goal>
 <goal name="Sig.Make.X.VC compare" expl="VC for compare" proved="true">
 <proof prover="3"><result status="valid" time="0.05"/></proof>
 </goal>
 <goal name="VC min3" expl="VC for min3" proved="true">
 <proof prover="1"><result status="valid" time="1.05"/></proof>
 </goal>
</theory>
<theory name="PHint" proved="true">
 <goal name="Impl.Make.X.is_pre_order" proved="true">
 <proof prover="3"><result status="valid" time="0.20"/></proof>
 </goal>
</theory>
<theory name="Main" proved="true">
 <goal name="Client.Sig.Make.VC empty" expl="VC for empty" proved="true">
 <proof prover="3"><result status="valid" time="0.13"/></proof>
 </goal>
 <goal name="Client.Sig.Make.VC is_empty" expl="VC for is_empty" proved="true">
 <proof prover="3"><result status="valid" time="0.12"/></proof>
 </goal>
 <goal name="Client.Sig.Make.VC merge" expl="VC for merge" proved="true">
 <proof prover="3"><result status="valid" time="0.32"/></proof>
 </goal>
 <goal name="Client.Sig.Make.VC insert" expl="VC for insert" proved="true">
 <proof prover="3"><result status="valid" time="0.25"/></proof>
 </goal>
 <goal name="Client.Sig.Make.min_def" proved="true">
 <proof prover="3"><result status="valid" time="0.31"/></proof>
 </goal>
 <goal name="Client.Sig.Make.VC find_min" expl="VC for find_min" proved="true">
 <proof prover="3"><result status="valid" time="0.08"/></proof>
 </goal>
 <goal name="Client.Sig.Make.VC delete_min" expl="VC for delete_min" proved="true">
 <proof prover="3"><result status="valid" time="0.18"/></proof>
 </goal>
</theory>
</file>
</why3session>
