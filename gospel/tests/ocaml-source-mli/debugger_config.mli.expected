
*******************************
********** Parsed file ********
*******************************
exception Toplevel 
val debugger_prompt : string
val event_mark_before : string
val event_mark_after : string
val shell : string
val runtime_program : string
val history_size : int ref
val load_path_for : (string, string list) Hashtbl.t
val checkpoint_big_step : int64 ref
val checkpoint_small_step : int64 ref
val checkpoint_max_count : int ref
val make_checkpoints : bool ref
val environment : (string * string) list ref

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

exception Toplevel 

val debugger_prompt : string


val event_mark_before : string


val event_mark_after : string


val shell : string


val runtime_program : string


val history_size : int ref


val load_path_for : (string, string list) Hashtbl.t


val checkpoint_big_step : int64 ref


val checkpoint_small_step : int64 ref


val checkpoint_max_count : int ref


val make_checkpoints : bool ref


val environment : (string * string) list ref


*******************************
********* Typed GOSPEL ********
*******************************
module debugger_config.mli

  Namespace: debugger_config.mli
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      Toplevel
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    exception Toplevel
    
    val debugger_prompt : string
    
    
    val event_mark_before : string
    
    
    val event_mark_after : string
    
    
    val shell : string
    
    
    val runtime_program : string
    
    
    val history_size : int ref
    
    
    val load_path_for : (string, string list) Hashtbl.t
    
    
    val checkpoint_big_step : int64 ref
    
    
    val checkpoint_small_step : int64 ref
    
    
    val checkpoint_max_count : int ref
    
    
    val make_checkpoints : bool ref
    
    
    val environment : (string * string) list ref
    


*** OK ***

