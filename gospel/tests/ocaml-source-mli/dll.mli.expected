
*******************************
********** Parsed file ********
*******************************
val extract_dll_name : string -> string
type dll_mode =
  | For_checking 
  | For_execution 
val open_dlls : dll_mode -> string list -> unit
val close_all_dlls : unit -> unit
type dll_address
val find_primitive : string -> dll_address
val synchronize_primitive : int -> dll_address -> unit
val add_path : string list -> unit
val remove_path : string list -> unit
val init_compile : bool -> unit
val init_toplevel : string -> unit
val reset : unit -> unit

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

val extract_dll_name : string -> string


type dll_mode =
| For_checking 
| For_execution 
  

val open_dlls : dll_mode -> string list -> unit


val close_all_dlls : unit -> unit


type dll_address
  

val find_primitive : string -> dll_address


val synchronize_primitive : int -> dll_address -> unit


val add_path : string list -> unit


val remove_path : string list -> unit


val init_compile : bool -> unit


val init_toplevel : string -> unit


val reset : unit -> unit


*******************************
********* Typed GOSPEL ********
*******************************
module dll.mli

  Namespace: dll.mli
    Type symbols
       dll_address
       dll_mode
      
    Logic Symbols
      function For_checking  : dll_mode
      function For_execution  : dll_mode
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    val extract_dll_name : string -> string
    
    
    type dll_mode = For_checking of 
                    function For_checking  : dll_mode
                 | For_execution of 
                   function For_execution  : dll_mode
    
    
    val open_dlls : dll_mode -> string list -> unit
    
    
    val close_all_dlls : unit -> unit
    
    
    type dll_address
    
    
    val find_primitive : string -> dll_address
    
    
    val synchronize_primitive : int -> dll_address -> unit
    
    
    val add_path : string list -> unit
    
    
    val remove_path : string list -> unit
    
    
    val init_compile : bool -> unit
    
    
    val init_toplevel : string -> unit
    
    
    val reset : unit -> unit
    


*** OK ***

