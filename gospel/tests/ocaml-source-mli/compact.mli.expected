
*******************************
********** Parsed file ********
*******************************
type lex_tables =
  {
  tbl_base: int array ;
  tbl_backtrk: int array ;
  tbl_default: int array ;
  tbl_trans: int array ;
  tbl_check: int array ;
  tbl_base_code: int array ;
  tbl_backtrk_code: int array ;
  tbl_default_code: int array ;
  tbl_trans_code: int array ;
  tbl_check_code: int array ;
  tbl_code: int array }
val compact_tables : Lexgen.automata array -> lex_tables

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

type lex_tables =
{
tbl_base: int array ;
tbl_backtrk: int array ;
tbl_default: int array ;
tbl_trans: int array ;
tbl_check: int array ;
tbl_base_code: int array ;
tbl_backtrk_code: int array ;
tbl_default_code: int array ;
tbl_trans_code: int array ;
tbl_check_code: int array ;
tbl_code: int array }
  

val compact_tables : Lexgen.automata array -> lex_tables


*******************************
********* Typed GOSPEL ********
*******************************
module compact.mli

  Namespace: compact.mli
    Type symbols
       lex_tables
      
    Logic Symbols
      function constr#lex_tables (_:int array) (_:int array) (_:int array) (_:
      int array) (_:int array) (_:int array) (_:int array) (_:int array) (_:
      int array) (_:int array) (_:int array) : lex_tables
      function tbl_backtrk (_:lex_tables) : int array
      function tbl_backtrk_code (_:lex_tables) : int array
      function tbl_base (_:lex_tables) : int array
      function tbl_base_code (_:lex_tables) : int array
      function tbl_check (_:lex_tables) : int array
      function tbl_check_code (_:lex_tables) : int array
      function tbl_code (_:lex_tables) : int array
      function tbl_default (_:lex_tables) : int array
      function tbl_default_code (_:lex_tables) : int array
      function tbl_trans (_:lex_tables) : int array
      function tbl_trans_code (_:lex_tables) : int array
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    type lex_tables = {tbl_base:int array; tbl_backtrk:int array; tbl_default:
                   int array; tbl_trans:int array; tbl_check:int array; tbl_base_code:
                   int array; tbl_backtrk_code:int array; tbl_default_code:
                   int array; tbl_trans_code:int array; tbl_check_code:
                   int array; tbl_code:int array}
                   function constr#lex_tables (_:int array) (_:int array) (_:int array) (_:int array) (_:int array) (_:int array) (_:int array) (_:int array) (_:int array) (_:int array) (_:int array) : lex_tables
                     function tbl_base (_:lex_tables) : int array
                     function tbl_backtrk (_:lex_tables) : int array
                     function tbl_default (_:lex_tables) : int array
                     function tbl_trans (_:lex_tables) : int array
                     function tbl_check (_:lex_tables) : int array
                     function tbl_base_code (_:lex_tables) : int array
                     function tbl_backtrk_code (_:lex_tables) : int array
                     function tbl_default_code (_:lex_tables) : int array
                     function tbl_trans_code (_:lex_tables) : int array
                     function tbl_check_code (_:lex_tables) : int array
                     function tbl_code (_:lex_tables) : int array
    
    
    val compact_tables : Lexgen.automata array -> lex_tables
    


*** OK ***

