
*******************************
********** Parsed file ********
*******************************
[@@@ocaml.warning "+a-4-9-30-40-41-42"]
include Identifiable.S
val wrap : Variable.t -> t
val unwrap : t -> Variable.t
val wrap_map : 'a Variable.Map.t -> 'a Map.t
val unwrap_set : Set.t -> Variable.Set.t
val in_compilation_unit : t -> Compilation_unit.t -> bool
val get_compilation_unit : t -> Compilation_unit.t
val unique_name : t -> string
val output_full : out_channel -> t -> unit

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

[@@@ocaml.warning "+a-4-9-30-40-41-42"]

include Identifiable.S

val wrap : Variable.t -> t


val unwrap : t -> Variable.t


val wrap_map : 'a Variable.Map.t -> 'a Map.t


val unwrap_set : Set.t -> Variable.Set.t


val in_compilation_unit : t -> Compilation_unit.t -> bool


val get_compilation_unit : t -> Compilation_unit.t


val unique_name : t -> string


val output_full : out_channel -> t -> unit


*******************************
********* Typed GOSPEL ********
*******************************
module closure_element.mli

  Namespace: closure_element.mli
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    [@@@ocaml.warning "+a-4-9-30-40-41-42"]
    
    include Identifiable.S
    
    val wrap : Variable.t -> t
    
    
    val unwrap : t -> Variable.t
    
    
    val wrap_map : 'a Variable.Map.t -> 'a Map.t
    
    
    val unwrap_set : Set.t -> Variable.Set.t
    
    
    val in_compilation_unit : t -> Compilation_unit.t -> bool
    
    
    val get_compilation_unit : t -> Compilation_unit.t
    
    
    val unique_name : t -> string
    
    
    val output_full : out_channel -> t -> unit
    


*** OK ***

