
*******************************
********** Parsed file ********
*******************************
val package_files :
  ppf_dump:Format.formatter ->
    Env.t -> string list -> string -> backend:(module Backend_intf.S) -> unit
type error =
  | Illegal_renaming of string * string * string 
  | Forward_reference of string * string 
  | Wrong_for_pack of string * string 
  | Linking_error 
  | Assembler_error of string 
  | File_not_found of string 
exception Error of error 
val report_error : Format.formatter -> error -> unit

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

val package_files :
  ppf_dump:Format.formatter ->
    Env.t -> string list -> string -> backend:(module Backend_intf.S) -> unit


type error =
| Illegal_renaming of string * string * string 
| Forward_reference of string * string 
| Wrong_for_pack of string * string 
| Linking_error 
| Assembler_error of string 
| File_not_found of string 
  

exception Error of error 

val report_error : Format.formatter -> error -> unit


*******************************
********* Typed GOSPEL ********
*******************************
module asmpackager.mli

  Namespace: asmpackager.mli
    Type symbols
       error
      
    Logic Symbols
      function Assembler_error (_:string) : error
      function File_not_found (_:string) : error
      function Forward_reference (_:string * string) : error
      function Illegal_renaming (_:string * string * string) : error
      function Linking_error  : error
      function Wrong_for_pack (_:string * string) : error
      
    Exception Symbols
      Error
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    val package_files :
    ppf_dump:Format.formatter ->
      Env.t ->
        string list -> string -> backend:(module Backend_intf.S) -> unit
    
    
    type error = Illegal_renaming of string * string * string
                 function Illegal_renaming (_:string * string * string) : error
              | Forward_reference of string * string
                function Forward_reference (_:string * string) : error
              | Wrong_for_pack of string * string
                function Wrong_for_pack (_:string * string) : error
              | Linking_error of 
                function Linking_error  : error
              | Assembler_error of string
                function Assembler_error (_:string) : error
              | File_not_found of string
                function File_not_found (_:string) : error
    
    
    exception Error
    
    val report_error : Format.formatter -> error -> unit
    


*** OK ***

