
*******************************
********** Parsed file ********
*******************************
val output_lexdef :
  in_channel ->
    out_channel ->
      Common.line_tracker ->
        Syntax.location ->
          Syntax.location option ->
            Compact.lex_tables ->
              (string list, Syntax.location) Lexgen.automata_entry list ->
                Syntax.location -> unit
exception Table_overflow 

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

val output_lexdef :
  in_channel ->
    out_channel ->
      Common.line_tracker ->
        Syntax.location ->
          Syntax.location option ->
            Compact.lex_tables ->
              (string list, Syntax.location) Lexgen.automata_entry list ->
                Syntax.location -> unit


exception Table_overflow 

*******************************
********* Typed GOSPEL ********
*******************************
module output.mli

  Namespace: output.mli
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      Table_overflow
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    val output_lexdef :
    in_channel ->
      out_channel ->
        Common.line_tracker ->
          Syntax.location ->
            Syntax.location option ->
              Compact.lex_tables ->
                (string list, Syntax.location) Lexgen.automata_entry list ->
                  Syntax.location -> unit
    
    
    exception Table_overflow


*** OK ***

