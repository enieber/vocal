
*******************************
********** Parsed file ********
*******************************
open Parser_aux
val pattern_matching :
  pattern ->
    Debugcom.remote_value ->
      Typedtree.type_expr ->
        (string * Debugcom.remote_value * Typedtree.type_expr) list

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

open Parser_aux

val pattern_matching :
  pattern ->
    Debugcom.remote_value ->
      Typedtree.type_expr ->
        (string * Debugcom.remote_value * Typedtree.type_expr) list


*******************************
********* Typed GOSPEL ********
*******************************
module pattern_matching.mli

  Namespace: pattern_matching.mli
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    open Parser_aux
    
    val pattern_matching :
    pattern ->
      Debugcom.remote_value ->
        Typedtree.type_expr ->
          (string * Debugcom.remote_value * Typedtree.type_expr) list
    


*** OK ***

