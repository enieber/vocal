
*******************************
********** Parsed file ********
*******************************
type execution_summary =
  | Event 
  | Breakpoint 
  | Exited 
  | Trap_barrier 
  | Uncaught_exc 
type report =
  {
  rep_type: execution_summary ;
  rep_event_count: int ;
  rep_stack_pointer: int ;
  rep_program_pointer: int }
type checkpoint_report =
  | Checkpoint_done of int 
  | Checkpoint_failed 
type follow_fork_mode =
  | Fork_child 
  | Fork_parent 
val set_current_connection : Primitives.io_channel -> unit
val set_event : int -> unit
val set_breakpoint : int -> unit
val reset_instr : int -> unit
val do_checkpoint : unit -> checkpoint_report
val do_go : int64 -> report
val stop : Primitives.io_channel -> unit
val wait_child : Primitives.io_channel -> unit
val initial_frame : unit -> (int * int)
val set_initial_frame : unit -> unit
val get_frame : unit -> (int * int)
val set_frame : int -> unit
val up_frame : int -> (int * int)
val set_trap_barrier : int -> unit
val fork_mode : follow_fork_mode ref
val update_follow_fork_mode : unit -> unit
exception Marshalling_error 
module Remote_value :
sig
  type t
  val repr : 'a -> t
  val obj : t -> 'a
  val is_block : t -> bool
  val tag : t -> int
  val size : t -> int
  val field : t -> int -> t
  val double_field : t -> int -> float
  val double_array_tag : int
  val same : t -> t -> bool
  val of_int : int -> t
  val local : int -> t
  val from_environment : int -> t
  val global : int -> t
  val accu : unit -> t
  val closure_code : t -> int
  val pointer : t -> string
end

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

type execution_summary =
| Event 
| Breakpoint 
| Exited 
| Trap_barrier 
| Uncaught_exc 
  

type report =
{
rep_type: execution_summary ;
rep_event_count: int ;
rep_stack_pointer: int ;
rep_program_pointer: int }
  

type checkpoint_report =
| Checkpoint_done of int 
| Checkpoint_failed 
  

type follow_fork_mode =
| Fork_child 
| Fork_parent 
  

val set_current_connection : Primitives.io_channel -> unit


val set_event : int -> unit


val set_breakpoint : int -> unit


val reset_instr : int -> unit


val do_checkpoint : unit -> checkpoint_report


val do_go : int64 -> report


val stop : Primitives.io_channel -> unit


val wait_child : Primitives.io_channel -> unit


val initial_frame : unit -> (int * int)


val set_initial_frame : unit -> unit


val get_frame : unit -> (int * int)


val set_frame : int -> unit


val up_frame : int -> (int * int)


val set_trap_barrier : int -> unit


val fork_mode : follow_fork_mode ref


val update_follow_fork_mode : unit -> unit


exception Marshalling_error 

module Remote_value :
sig
  type t
    
  val repr : 'a -> t
  
  val obj : t -> 'a
  
  val is_block : t -> bool
  
  val tag : t -> int
  
  val size : t -> int
  
  val field : t -> int -> t
  
  val double_field : t -> int -> float
  
  val double_array_tag : int
  
  val same : t -> t -> bool
  
  val of_int : int -> t
  
  val local : int -> t
  
  val from_environment : int -> t
  
  val global : int -> t
  
  val accu : unit -> t
  
  val closure_code : t -> int
  
  val pointer : t -> string
  
end

*******************************
********* Typed GOSPEL ********
*******************************
module debugcom.mli

  Namespace: debugcom.mli
    Type symbols
       checkpoint_report
       execution_summary
       follow_fork_mode
       report
      
    Logic Symbols
      function Breakpoint  : execution_summary
      function Checkpoint_done (_:int) : checkpoint_report
      function Checkpoint_failed  : checkpoint_report
      function Event  : execution_summary
      function Exited  : execution_summary
      function Fork_child  : follow_fork_mode
      function Fork_parent  : follow_fork_mode
      function Trap_barrier  : execution_summary
      function Uncaught_exc  : execution_summary
      function constr#report (_:execution_summary) (_:int) (_:int) (_:
      int) : report
      function rep_event_count (_:report) : int
      function rep_program_pointer (_:report) : int
      function rep_stack_pointer (_:report) : int
      function rep_type (_:report) : execution_summary
      
    Exception Symbols
      Marshalling_error
      
    Namespaces
      Namespace: Remote_value
        Type symbols
           t
          
        Logic Symbols
          
        Exception Symbols
          
        Namespaces
          
        Type Namespaces
          
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    type execution_summary = Event of 
                             function Event  : execution_summary
                          | Breakpoint of 
                            function Breakpoint  : execution_summary
                          | Exited of 
                            function Exited  : execution_summary
                          | Trap_barrier of 
                            function Trap_barrier  : execution_summary
                          | Uncaught_exc of 
                            function Uncaught_exc  : execution_summary
    
    
    type report = {rep_type:execution_summary; rep_event_count:int; rep_stack_pointer:
               int; rep_program_pointer:int}
               function constr#report (_:execution_summary) (_:int) (_:int) (_:int) : report
                 function rep_type (_:report) : execution_summary
                 function rep_event_count (_:report) : int
                 function rep_stack_pointer (_:report) : int
                 function rep_program_pointer (_:report) : int
    
    
    type checkpoint_report = Checkpoint_done of int
                             function Checkpoint_done (_:int) : checkpoint_report
                          | Checkpoint_failed of 
                            function Checkpoint_failed  : checkpoint_report
    
    
    type follow_fork_mode = Fork_child of 
                            function Fork_child  : follow_fork_mode
                         | Fork_parent of 
                           function Fork_parent  : follow_fork_mode
    
    
    val set_current_connection : Primitives.io_channel -> unit
    
    
    val set_event : int -> unit
    
    
    val set_breakpoint : int -> unit
    
    
    val reset_instr : int -> unit
    
    
    val do_checkpoint : unit -> checkpoint_report
    
    
    val do_go : int64 -> report
    
    
    val stop : Primitives.io_channel -> unit
    
    
    val wait_child : Primitives.io_channel -> unit
    
    
    val initial_frame : unit -> (int * int)
    
    
    val set_initial_frame : unit -> unit
    
    
    val get_frame : unit -> (int * int)
    
    
    val set_frame : int -> unit
    
    
    val up_frame : int -> (int * int)
    
    
    val set_trap_barrier : int -> unit
    
    
    val fork_mode : follow_fork_mode ref
    
    
    val update_follow_fork_mode : unit -> unit
    
    
    exception Marshalling_error
    
    module Remote_value :
    sig
      type t
      
      val repr : 'a -> t
      
      val obj : t -> 'a
      
      val is_block : t -> bool
      
      val tag : t -> int
      
      val size : t -> int
      
      val field : t -> int -> t
      
      val double_field : t -> int -> float
      
      val double_array_tag : int
      
      val same : t -> t -> bool
      
      val of_int : int -> t
      
      val local : int -> t
      
      val from_environment : int -> t
      
      val global : int -> t
      
      val accu : unit -> t
      
      val closure_code : t -> int
      
      val pointer : t -> string
      
    end


*** OK ***

