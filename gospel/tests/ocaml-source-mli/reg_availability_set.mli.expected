
*******************************
********** Parsed file ********
*******************************
[@@@ocaml.text " Register availability sets. "]
type t =
  | Ok of Reg_with_debug_info.Set.t 
  | Unreachable 
val inter : t -> t -> t[@@ocaml.doc " Intersection of availabilities. "]
val canonicalise : t -> t[@@ocaml.doc
                           " Return a subset of the given availability set which contains no registers\n    that are not associated with debug info (and holding values of\n    non-persistent identifiers); and where no two registers share the same\n    location. "]
val equal : t -> t -> bool
val print :
  print_reg:(Format.formatter -> Reg.t -> unit) ->
    Format.formatter -> t -> unit[@@ocaml.doc
                                   " For debugging purposes only. "]

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

[@@@ocaml.text " Register availability sets. "]

type t =
| Ok of Reg_with_debug_info.Set.t 
| Unreachable 
  

val inter : t -> t -> t[@@ocaml.doc " Intersection of availabilities. "]


val canonicalise : t -> t[@@ocaml.doc
                           " Return a subset of the given availability set which contains no registers\n    that are not associated with debug info (and holding values of\n    non-persistent identifiers); and where no two registers share the same\n    location. "]


val equal : t -> t -> bool


val print :
  print_reg:(Format.formatter -> Reg.t -> unit) ->
    Format.formatter -> t -> unit[@@ocaml.doc
                                   " For debugging purposes only. "]

File "./reg_with_debug_info.mli", line 76, characters 4-9:
Error: Symbol Set.S not found
