
*******************************
********** Parsed file ********
*******************************
val register : pass_name:string -> unit
val with_dump :
  ppf_dump:Format.formatter ->
    pass_name:string ->
      f:(unit -> 'b option) ->
        input:'a ->
          print_input:(Format.formatter -> 'a -> unit) ->
            print_output:(Format.formatter -> 'b -> unit) -> 'b option

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

val register : pass_name:string -> unit


val with_dump :
  ppf_dump:Format.formatter ->
    pass_name:string ->
      f:(unit -> 'b option) ->
        input:'a ->
          print_input:(Format.formatter -> 'a -> unit) ->
            print_output:(Format.formatter -> 'b -> unit) -> 'b option


*******************************
********* Typed GOSPEL ********
*******************************
module pass_wrapper.mli

  Namespace: pass_wrapper.mli
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    val register : pass_name:string -> unit
    
    
    val with_dump :
    ppf_dump:Format.formatter ->
      pass_name:string ->
        f:(unit -> 'b option) ->
          input:'a ->
            print_input:(Format.formatter -> 'a -> unit) ->
              print_output:(Format.formatter -> 'b -> unit) -> 'b option
    


*** OK ***

