
*******************************
********** Parsed file ********
*******************************
open Typedtree
open Lambda
val for_function :
  Location.t ->
    int ref option -> lambda -> (pattern * lambda) list -> partial -> lambda
val for_trywith : lambda -> (pattern * lambda) list -> lambda
val for_let : Location.t -> lambda -> pattern -> lambda -> lambda
val for_multiple_match :
  Location.t -> lambda list -> (pattern * lambda) list -> partial -> lambda
val for_tupled_function :
  Location.t ->
    Ident.t list -> (pattern list * lambda) list -> partial -> lambda
exception Cannot_flatten 
val flatten_pattern : int -> pattern -> pattern list
val expand_stringswitch :
  Location.t -> lambda -> (string * lambda) list -> lambda option -> lambda
val inline_lazy_force : lambda -> Location.t -> lambda

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

open Typedtree

open Lambda

val for_function :
  Location.t ->
    int ref option -> lambda -> (pattern * lambda) list -> partial -> lambda


val for_trywith : lambda -> (pattern * lambda) list -> lambda


val for_let : Location.t -> lambda -> pattern -> lambda -> lambda


val for_multiple_match :
  Location.t -> lambda list -> (pattern * lambda) list -> partial -> lambda


val for_tupled_function :
  Location.t ->
    Ident.t list -> (pattern list * lambda) list -> partial -> lambda


exception Cannot_flatten 

val flatten_pattern : int -> pattern -> pattern list


val expand_stringswitch :
  Location.t -> lambda -> (string * lambda) list -> lambda option -> lambda


val inline_lazy_force : lambda -> Location.t -> lambda

File "./asttypes.mli", line 28, characters 19-24:
Error: Symbol int32 not found
