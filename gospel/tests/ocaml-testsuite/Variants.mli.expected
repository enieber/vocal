
*******************************
********** Parsed file ********
*******************************
[@@@ocaml.text
  " This test is here to check the latex code generated for variants "]
type s =
  | A 
  | B [@ocaml.doc " only B is documented here "]
  | C 
type t =
  | A
  [@ocaml.doc
    " doc for A.\n        {[0]}\n        With three paragraphs.\n        {[1]}\n        To check styling\n    "]
  | B [@ocaml.doc " doc for B "]
type u =
  | A [@ocaml.doc " doc for A "]
  | B of unit [@ocaml.doc " doc for B "][@@ocaml.doc
                                          " Some documentation for u"]
type w =
  | A of {
  x: int } [@ocaml.doc " doc for A "]
  | B of {
  y: int } [@ocaml.doc " doc for B "][@@ocaml.doc " With records "]
type z =
  | A of int [@ocaml.doc " doc for A "]
  | B of int [@ocaml.doc " doc for B "][@@ocaml.doc " With args "]
type a =
  | A: a [@ocaml.doc " doc for A"][@@ocaml.doc " Gadt notation "]
type b =
  | B [@ocaml.doc " doc for B "][@@ocaml.doc " Lonely constructor "]
type no_documentation =
  | A 
  | B 
  | C 
type e = |[@@ocaml.doc " Empty variant "]

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

[@@@ocaml.text
  " This test is here to check the latex code generated for variants "]

type s =
| A 
| B [@ocaml.doc " only B is documented here "]
| C 
  

type t =
| A
[@ocaml.doc
  " doc for A.\n        {[0]}\n        With three paragraphs.\n        {[1]}\n        To check styling\n    "]
| B [@ocaml.doc " doc for B "]
  

type u =
| A [@ocaml.doc " doc for A "]
| B of unit [@ocaml.doc " doc for B "][@@ocaml.doc
                                        " Some documentation for u"]
  

type w =
| A of {
x: int } [@ocaml.doc " doc for A "]
| B of {
y: int } [@ocaml.doc " doc for B "][@@ocaml.doc " With records "]
  

type z =
| A of int [@ocaml.doc " doc for A "]
| B of int [@ocaml.doc " doc for B "][@@ocaml.doc " With args "]
  

type a =
| A: a [@ocaml.doc " doc for A"][@@ocaml.doc " Gadt notation "]
  

type b =
| B [@ocaml.doc " doc for B "][@@ocaml.doc " Lonely constructor "]
  

type no_documentation =
| A 
| B 
| C 
  

type e = |[@@ocaml.doc " Empty variant "]
  
File "Variants.mli", line 42, characters 4-8:
Error: Not supported: type in constructors not supported
