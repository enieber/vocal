
*******************************
********** Parsed file ********
*******************************
type code_dag_node =
  {
  instr: Linearize.instruction ;
  delay: int ;
  mutable sons: (code_dag_node * int) list ;
  mutable date: int ;
  mutable length: int ;
  mutable ancestors: int ;
  mutable emitted_ancestors: int }
class virtual scheduler_generic :
  object
    method  virtual oper_issue_cycles : Mach.operation -> int
    method  virtual oper_latency : Mach.operation -> int
    method  reload_retaddr_issue_cycles : int
    method  reload_retaddr_latency : int
    method  oper_in_basic_block : Mach.operation -> bool
    method  is_store : Mach.operation -> bool
    method  is_load : Mach.operation -> bool
    method  is_checkbound : Mach.operation -> bool
    method  schedule_fundecl : Linearize.fundecl -> Linearize.fundecl
  end
val reset : unit -> unit

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

type code_dag_node =
{
instr: Linearize.instruction ;
delay: int ;
mutable sons: (code_dag_node * int) list ;
mutable date: int ;
mutable length: int ;
mutable ancestors: int ;
mutable emitted_ancestors: int }
  

class virtual scheduler_generic :
  object
    method  virtual oper_issue_cycles : Mach.operation -> int
    method  virtual oper_latency : Mach.operation -> int
    method  reload_retaddr_issue_cycles : int
    method  reload_retaddr_latency : int
    method  oper_in_basic_block : Mach.operation -> bool
    method  is_store : Mach.operation -> bool
    method  is_load : Mach.operation -> bool
    method  is_checkbound : Mach.operation -> bool
    method  schedule_fundecl : Linearize.fundecl -> Linearize.fundecl
  end

val reset : unit -> unit

File "./asttypes.mli", line 28, characters 19-24:
Error: Symbol int32 not found
