
*******************************
********** Parsed file ********
*******************************
[@@@ocaml.text
  " Basic interface to the terminfo database\n\n  {b Warning:} this module is unstable and part of\n  {{!Compiler_libs}compiler-libs}.\n\n"]
type status =
  | Uninitialised 
  | Bad_term 
  | Good_term 
val setup : out_channel -> status
val num_lines : out_channel -> int
val backup : out_channel -> int -> unit
val standout : out_channel -> bool -> unit
val resume : out_channel -> int -> unit

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

[@@@ocaml.text
  " Basic interface to the terminfo database\n\n  {b Warning:} this module is unstable and part of\n  {{!Compiler_libs}compiler-libs}.\n\n"]

type status =
| Uninitialised 
| Bad_term 
| Good_term 
  

val setup : out_channel -> status


val num_lines : out_channel -> int


val backup : out_channel -> int -> unit


val standout : out_channel -> bool -> unit


val resume : out_channel -> int -> unit


*******************************
********* Typed GOSPEL ********
*******************************
module terminfo.mli

  Namespace: terminfo.mli
    Type symbols
       status
      
    Logic Symbols
      function Bad_term  : status
      function Good_term  : status
      function Uninitialised  : status
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    [@@@ocaml.text
      " Basic interface to the terminfo database\n\n  {b Warning:} this module is unstable and part of\n  {{!Compiler_libs}compiler-libs}.\n\n"]
    
    type status = Uninitialised of 
                  function Uninitialised  : status
               | Bad_term of 
                 function Bad_term  : status
               | Good_term of 
                 function Good_term  : status
    
    
    val setup : out_channel -> status
    
    
    val num_lines : out_channel -> int
    
    
    val backup : out_channel -> int -> unit
    
    
    val standout : out_channel -> bool -> unit
    
    
    val resume : out_channel -> int -> unit
    


*** OK ***

