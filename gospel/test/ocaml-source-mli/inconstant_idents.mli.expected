
*******************************
********** Parsed file ********
*******************************
[@@@ocaml.warning "+a-4-9-30-40-41-42"]
type result
val inconstants_on_program :
  compilation_unit:Compilation_unit.t ->
    backend:(module Backend_intf.S) -> Flambda.program -> result[@@ocaml.doc
                                                                  " [inconstants_on_program] finds those variables and set-of-closures\n    identifiers that cannot be compiled to constants by [Flambda_to_clambda].\n"]
val variable : Variable.t -> result -> bool[@@ocaml.doc
                                             " [variable var res] returns [true] if [var] is marked as inconstant\n    in [res]. "]
val closure : Set_of_closures_id.t -> result -> bool[@@ocaml.doc
                                                      " [closure cl res] returns [true] if [cl] is marked as inconstant\n    in [res]. "]

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

[@@@ocaml.warning "+a-4-9-30-40-41-42"]

type result
  

val inconstants_on_program :
  compilation_unit:Compilation_unit.t ->
    backend:(module Backend_intf.S) -> Flambda.program -> result[@@ocaml.doc
                                                                  " [inconstants_on_program] finds those variables and set-of-closures\n    identifiers that cannot be compiled to constants by [Flambda_to_clambda].\n"]


val variable : Variable.t -> result -> bool[@@ocaml.doc
                                             " [variable var res] returns [true] if [var] is marked as inconstant\n    in [res]. "]


val closure : Set_of_closures_id.t -> result -> bool[@@ocaml.doc
                                                      " [closure cl res] returns [true] if [cl] is marked as inconstant\n    in [res]. "]


*******************************
********* Typed GOSPEL ********
*******************************
module inconstant_idents.mli

  Namespace: inconstant_idents.mli
    Type symbols
       result
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    [@@@ocaml.warning "+a-4-9-30-40-41-42"]
    
    type result
    
    
    val inconstants_on_program :
    compilation_unit:Compilation_unit.t ->
      backend:(module Backend_intf.S) -> Flambda.program -> result[@@ocaml.doc
                                                                    " [inconstants_on_program] finds those variables and set-of-closures\n    identifiers that cannot be compiled to constants by [Flambda_to_clambda].\n"]
    
    
    val variable :
    Variable.t -> result -> bool[@@ocaml.doc
                                  " [variable var res] returns [true] if [var] is marked as inconstant\n    in [res]. "]
    
    
    val closure :
    Set_of_closures_id.t -> result -> bool[@@ocaml.doc
                                            " [closure cl res] returns [true] if [cl] is marked as inconstant\n    in [res]. "]
    


*** OK ***

