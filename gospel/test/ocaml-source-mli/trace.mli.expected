
*******************************
********** Parsed file ********
*******************************
open Format
type codeptr
type traced_function =
  {
  path: Path.t ;
  closure: Obj.t ;
  actual_code: codeptr ;
  instrumented_fun: codeptr -> Obj.t -> Obj.t -> Obj.t }
val traced_functions : traced_function list ref
val is_traced : Obj.t -> Path.t option
val get_code_pointer : Obj.t -> codeptr
val set_code_pointer : Obj.t -> codeptr -> unit
val instrument_closure :
  Env.t ->
    Longident.t ->
      formatter -> Types.type_expr -> codeptr -> Obj.t -> Obj.t -> Obj.t
val print_trace : Obj.t -> Obj.t -> Obj.t

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

open Format

type codeptr
  

type traced_function =
{
path: Path.t ;
closure: Obj.t ;
actual_code: codeptr ;
instrumented_fun: codeptr -> Obj.t -> Obj.t -> Obj.t }
  

val traced_functions : traced_function list ref


val is_traced : Obj.t -> Path.t option


val get_code_pointer : Obj.t -> codeptr


val set_code_pointer : Obj.t -> codeptr -> unit


val instrument_closure :
  Env.t ->
    Longident.t ->
      formatter -> Types.type_expr -> codeptr -> Obj.t -> Obj.t -> Obj.t


val print_trace : Obj.t -> Obj.t -> Obj.t

gospel: internal error, uncaught exception:
        File "gospel/src/typing.ml", line 515, characters 22-28: Assertion failed
        
