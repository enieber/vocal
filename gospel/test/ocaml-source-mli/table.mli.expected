
*******************************
********** Parsed file ********
*******************************
type 'a t
val create : 'a -> 'a t
val emit : 'a t -> 'a -> unit
val iter : 'a t -> ('a -> unit) -> unit
val trim : 'a t -> 'a array
exception Error 
val get : 'a t -> int -> 'a
val size : 'a t -> int

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

type 'a t
  

val create : 'a -> 'a t


val emit : 'a t -> 'a -> unit


val iter : 'a t -> ('a -> unit) -> unit


val trim : 'a t -> 'a array


exception Error 

val get : 'a t -> int -> 'a


val size : 'a t -> int


*******************************
********* Typed GOSPEL ********
*******************************
module table.mli

  Namespace: table.mli
    Type symbols
      'a t
      
    Logic Symbols
      
    Exception Symbols
      Error
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    type 'a t
    
    
    val create : 'a -> 'a t
    
    
    val emit : 'a t -> 'a -> unit
    
    
    val iter : 'a t -> ('a -> unit) -> unit
    
    
    val trim : 'a t -> 'a array
    
    
    exception Error
    
    val get : 'a t -> int -> 'a
    
    
    val size : 'a t -> int
    


*** OK ***

