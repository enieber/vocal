
*******************************
********** Parsed file ********
*******************************
open Typedtree
open Lambda
val transl_implementation :
  string -> (structure * module_coercion) -> Lambda.program
val transl_store_phrases : string -> structure -> (int * lambda)
val transl_store_implementation :
  string -> (structure * module_coercion) -> Lambda.program
val transl_implementation_flambda :
  string -> (structure * module_coercion) -> Lambda.program
val transl_toplevel_definition : structure -> lambda
val transl_package :
  Ident.t option list -> Ident.t -> module_coercion -> lambda
val transl_store_package :
  Ident.t option list -> Ident.t -> module_coercion -> (int * lambda)
val transl_package_flambda :
  Ident.t option list -> module_coercion -> (int * lambda)
val toplevel_name : Ident.t -> string
val nat_toplevel_name : Ident.t -> (Ident.t * int)
val primitive_declarations : Primitive.description list ref
type error =
  | Circular_dependency of Ident.t list 
  | Conflicting_inline_attributes 
exception Error of Location.t * error 
val report_error : Format.formatter -> error -> unit
val reset : unit -> unit

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

open Typedtree

open Lambda

val transl_implementation :
  string -> (structure * module_coercion) -> Lambda.program


val transl_store_phrases : string -> structure -> (int * lambda)


val transl_store_implementation :
  string -> (structure * module_coercion) -> Lambda.program


val transl_implementation_flambda :
  string -> (structure * module_coercion) -> Lambda.program


val transl_toplevel_definition : structure -> lambda


val transl_package :
  Ident.t option list -> Ident.t -> module_coercion -> lambda


val transl_store_package :
  Ident.t option list -> Ident.t -> module_coercion -> (int * lambda)


val transl_package_flambda :
  Ident.t option list -> module_coercion -> (int * lambda)


val toplevel_name : Ident.t -> string


val nat_toplevel_name : Ident.t -> (Ident.t * int)


val primitive_declarations : Primitive.description list ref


type error =
| Circular_dependency of Ident.t list 
| Conflicting_inline_attributes 
  

exception Error of Location.t * error 

val report_error : Format.formatter -> error -> unit


val reset : unit -> unit

File "./asttypes.mli", line 28, characters 19-24:
Error: Symbol int32 not found
