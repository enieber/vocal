
*******************************
********** Parsed file ********
*******************************
class reload_generic :
  object
    method  reload_operation :
      Mach.operation ->
        Reg.t array -> Reg.t array -> (Reg.t array * Reg.t array)
    method  reload_test : Mach.test -> Reg.t array -> Reg.t array
    method  makereg : Reg.t -> Reg.t
    method  fundecl : Mach.fundecl -> (Mach.fundecl * bool)
  end

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

class reload_generic :
  object
    method  reload_operation :
      Mach.operation ->
        Reg.t array -> Reg.t array -> (Reg.t array * Reg.t array)
    method  reload_test : Mach.test -> Reg.t array -> Reg.t array
    method  makereg : Reg.t -> Reg.t
    method  fundecl : Mach.fundecl -> (Mach.fundecl * bool)
  end

*******************************
********* Typed GOSPEL ********
*******************************
module reloadgen.mli

  Namespace: reloadgen.mli
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    class reload_generic :
      object
        method  reload_operation :
          Mach.operation ->
            Reg.t array -> Reg.t array -> (Reg.t array * Reg.t array)
        method  reload_test : Mach.test -> Reg.t array -> Reg.t array
        method  makereg : Reg.t -> Reg.t
        method  fundecl : Mach.fundecl -> (Mach.fundecl * bool)
      end


*** OK ***

