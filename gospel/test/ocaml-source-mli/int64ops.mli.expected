
*******************************
********** Parsed file ********
*******************************
val (++) : int64 -> int64 -> int64
val (--) : int64 -> int64 -> int64
val suc64 : int64 -> int64
val pre64 : int64 -> int64
val _0 : int64
val _1 : int64
val _minus1 : int64
val (~~) : string -> int64
val max_small_int : int64
val to_int : int64 -> int

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

val (++) : int64 -> int64 -> int64


val (--) : int64 -> int64 -> int64


val suc64 : int64 -> int64


val pre64 : int64 -> int64


val _0 : int64


val _1 : int64


val _minus1 : int64


val (~~) : string -> int64


val max_small_int : int64


val to_int : int64 -> int


*******************************
********* Typed GOSPEL ********
*******************************
module int64ops.mli

  Namespace: int64ops.mli
    Type symbols
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    val ++ : int64 -> int64 -> int64
    
    
    val -- : int64 -> int64 -> int64
    
    
    val suc64 : int64 -> int64
    
    
    val pre64 : int64 -> int64
    
    
    val _0 : int64
    
    
    val _1 : int64
    
    
    val _minus1 : int64
    
    
    val ~~ : string -> int64
    
    
    val max_small_int : int64
    
    
    val to_int : int64 -> int
    


*** OK ***

