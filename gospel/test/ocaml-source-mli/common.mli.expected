
*******************************
********** Parsed file ********
*******************************
type line_tracker
val open_tracker : string -> out_channel -> line_tracker
val close_tracker : line_tracker -> unit
val copy_chunk :
  in_channel ->
    out_channel -> line_tracker -> Syntax.location -> bool -> unit
val output_mem_access : out_channel -> int -> unit
val output_memory_actions :
  string -> out_channel -> Lexgen.memory_action list -> unit
val output_env :
  in_channel ->
    out_channel ->
      line_tracker -> (Lexgen.ident * Lexgen.ident_info) list -> unit
val output_args : out_channel -> string list -> unit
val output_refill_handler :
  in_channel -> out_channel -> line_tracker -> Syntax.location option -> bool
val quiet_mode : bool ref

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

type line_tracker
  

val open_tracker : string -> out_channel -> line_tracker


val close_tracker : line_tracker -> unit


val copy_chunk :
  in_channel ->
    out_channel -> line_tracker -> Syntax.location -> bool -> unit


val output_mem_access : out_channel -> int -> unit


val output_memory_actions :
  string -> out_channel -> Lexgen.memory_action list -> unit


val output_env :
  in_channel ->
    out_channel ->
      line_tracker -> (Lexgen.ident * Lexgen.ident_info) list -> unit


val output_args : out_channel -> string list -> unit


val output_refill_handler :
  in_channel -> out_channel -> line_tracker -> Syntax.location option -> bool


val quiet_mode : bool ref


*******************************
********* Typed GOSPEL ********
*******************************
module common.mli

  Namespace: common.mli
    Type symbols
       line_tracker
      
    Logic Symbols
      
    Exception Symbols
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    type line_tracker
    
    
    val open_tracker : string -> out_channel -> line_tracker
    
    
    val close_tracker : line_tracker -> unit
    
    
    val copy_chunk :
    in_channel ->
      out_channel -> line_tracker -> Syntax.location -> bool -> unit
    
    
    val output_mem_access : out_channel -> int -> unit
    
    
    val output_memory_actions :
    string -> out_channel -> Lexgen.memory_action list -> unit
    
    
    val output_env :
    in_channel ->
      out_channel ->
        line_tracker -> (Lexgen.ident * Lexgen.ident_info) list -> unit
    
    
    val output_args : out_channel -> string list -> unit
    
    
    val output_refill_handler :
    in_channel ->
      out_channel -> line_tracker -> Syntax.location option -> bool
    
    
    val quiet_mode : bool ref
    


*** OK ***

