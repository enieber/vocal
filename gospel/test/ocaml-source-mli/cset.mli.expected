
*******************************
********** Parsed file ********
*******************************
type t
val empty : t
val is_empty : t -> bool
val all_chars : t
exception Bad 
val all_chars_eof : t
val eof : t
val singleton : int -> t
val interval : int -> int -> t
val union : t -> t -> t
val inter : t -> t -> t
val diff : t -> t -> t
val complement : t -> t
val env_to_array : (t * 'a) list -> 'a array

*******************************
****** GOSPEL translation *****
*******************************
(*@ open Gospelstdlib *)

type t
  

val empty : t


val is_empty : t -> bool


val all_chars : t


exception Bad 

val all_chars_eof : t


val eof : t


val singleton : int -> t


val interval : int -> int -> t


val union : t -> t -> t


val inter : t -> t -> t


val diff : t -> t -> t


val complement : t -> t


val env_to_array : (t * 'a) list -> 'a array


*******************************
********* Typed GOSPEL ********
*******************************
module cset.mli

  Namespace: cset.mli
    Type symbols
       t
      
    Logic Symbols
      
    Exception Symbols
      Bad
      
    Namespaces
      
    Type Namespaces
      
  Signatures
    (*@ open Gospelstdlib *)
    
    type t
    
    
    val empty : t
    
    
    val is_empty : t -> bool
    
    
    val all_chars : t
    
    
    exception Bad
    
    val all_chars_eof : t
    
    
    val eof : t
    
    
    val singleton : int -> t
    
    
    val interval : int -> int -> t
    
    
    val union : t -> t -> t
    
    
    val inter : t -> t -> t
    
    
    val diff : t -> t -> t
    
    
    val complement : t -> t
    
    
    val env_to_array : (t * 'a) list -> 'a array
    


*** OK ***

